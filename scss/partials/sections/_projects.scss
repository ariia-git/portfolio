// @include mqh() - detects if device has hover capability
// and applies the styles if it does


.projects {
  .heading {
    color: c(white);
  }
  & .row {
    justify-content: flex-start;
    @include mq(md) {
    justify-content: center;
    }
  }
}
.card {
  color: c(white);
  background: url("../img/card-bg.jpg");
  -webkit-background-size: cover;
  background-size: cover;
  padding: 10rem 0 0;
  min-width: rem(266); // dont allow a card to be smaller than this
  max-width: rem(330); // dont allow a card to be bigger than this
  border-radius: .5rem;
  overflow: hidden;
  transition: transform 500ms ease;
  box-shadow:  0 4px 6px -1px rgba(90, 90, 90, 0.1), 0 2px 4px -1px rgba(90, 90, 90, 0.06);
  &:hover,
  &:focus,
  &:focus-within {
    transform: scale(1.05); // slightly increase card size on hover
  }
  &:hover &-title::after,
  &:focus &-title::after {
    transform: scaleX(1); // show the underline of the title
  }
  &:hover &-content,
  &:focus-within &-content{
    @include mqh() {
      transform: translateY(0);
      transition-delay: 500ms;
    }
  }
  &:focus-within &-content {
    transition-delay: 0ms;
  }
  &:hover &-content > *:not(.card-title),
  &:focus-within &-content > *:not(.card-title),
  &:focus &-content > *:not(.card-title){ // fade in card content except title
    @include mqh() {
      opacity: 1;
      transition-delay: 800ms;
    }

  }
  & .button {
    background: c(accent);
    color: c(grey-900);
    font-weight: $fw-semibold;
    border-radius: 0.25rem;
    cursor: pointer;
    &:hover, &:focus {
      background: c(white);
    }
  }
  &-content { // add gradient behind text and above image to make text readable
    background: linear-gradient(
                    rgba(0, 0, 0, 0),
                    rgba(0, 0, 0, 0.3) 20%,
                    rgba(0, 0, 0, 1)
    );
    @include mqh() {
      transform: translateY(70%); // push content down to only show title
      transition: transform 500ms ease;
      &:hover &-content,
      &:focus-within &-content, {
        transform: translateY(0); // reset position of text on card hover
        transition-delay: 500ms;
    }
      & > *:not(.card-title) {
        opacity: 0;
        transition: opacity 500ms linear;
      }
    }
  }
  &-title {
    position: relative;
    display: inline-block;
    font-weight: $fw-semibold;
    &::after { // set styling for the underline on the card title
      content: '';
      position: absolute;
      height: 4px;
      background: c(accent);
      left: calc(1.5rem * -1);
      bottom: -2px;
      width: calc(100% + 1.5rem);
      transform-origin: left;
      transition: transform 500ms ease;
      @include mqh() {
      transform: scaleX(0);
    }
    }

  }
}